# -*- coding: utf-8 -*-
"""Copy of credit card fraud .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mXrPknVuS0LS4iFniYvynOeIBhb9-M1M
"""

import pandas as pd
from sklearn.metrics import accuracy_score, precision_score,  recall_score , classification_report, confusion_matrix
from sklearn.model_selection  import train_test_split
from imblearn.over_sampling import SMOTE
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
df=pd.read_csv("/content/creditcard.csv")

print(df.head())

df=df.dropna()

X = df.drop('Class', axis=1)
y = df['Class']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)



smote = SMOTE(random_state=42)
X_resampled, y_resampled = smote.fit_resample(X_train, y_train)

# Create and train a RandomForestClassifier
model = RandomForestClassifier()
model.fit(X_resampled, y_resampled)

y_pred =model.predict(X_test)

logreg = LogisticRegression(random_state=42)
logreg.fit(X_resampled, y_resampled)

y_pred = logreg.predict(X_test)

y_pred = logreg.predict(X_test)

conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)

accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)

print(f"Accuracy: {accuracy:.2f}")
print("Confusion Matrix:")
print(conf_matrix)
print("\nClassification Report:")
print(class_report)

